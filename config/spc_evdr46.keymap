/*
 * Copyright (c) 2023 sporkus
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            global-quick-tap-ms = <180>;
            quick-tap-ms = <250>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-on-release;
        };
        sft_t: sft_t {
            compatible = "zmk,behavior-hold-tap";
            label = "SFT_T";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            hold-trigger-on-release;
            flavor = "tap-unless-interrupted";
        };
        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <300>;
            ignore-modifiers;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <5 17>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <8 20>;
        };

        combo_lt {
            bindings = <&kp LT>;
            key-positions = <6 18>;
        };

        combo_gt {
            bindings = <&kp GT>;
            key-positions = <7 19>;
        };

        combo_bspc {
            bindings = <&kp BSPC>;
            key-positions = <9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " Base";
            bindings = <
     &kp C_MUTE
        &kp TAB           &kp Q           &kp W           &kp E        &kp R  &kp T        &kp Y        &kp U           &kp I         &kp O               &kp P    &kp BSPC
      &lt 2 ESC           &kp A           &kp S           &kp D        &kp F  &kp G        &kp H        &kp J           &kp K         &kp L    &kp SINGLE_QUOTE       &none
&skq LEFT_SHIFT  &sft_t LSHFT Z  &hm LEFT_ALT X  &hm LEFT_GUI C  &hm LCTRL V  &kp B        &kp N  &hm RCTRL M  &hm RGUI COMMA  &hm LALT DOT  &sft_t RSHFT SLASH  &skq RSHFT
      &kp LCTRL        &kp LALT        &kp LGUI                    &lt 2 TAB  &mo 1  &lt 2 SPACE   &lt 1 BSPC                      &kp LGUI            &kp LALT       &none
                                                                                                     &kp LEFT        &kp DOWN        &kp UP           &kp RIGHT       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NUM {
            bindings = <
          &none
         &trans        &kp TILDE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON   &kp PLUS  &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp N0  &trans
         &trans        &kp GRAVE    &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp COLON  &kp UNDER  &kp MINUS  &kp N4  &kp N5  &kp N6  &trans  &trans
&skq LEFT_SHIFT  &skq LEFT_SHIFT             &none              &none      &kp TILDE   &kp PIPE   &kp BSLH  &kp N1  &kp N2  &kp N3  &trans  &trans
         &trans           &trans            &trans                            &trans     &trans     &trans  &kp N0          &trans  &trans  &trans
                                                                                                            &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NAV {
            bindings = <
&bootloader
     &trans  &trans  &trans  &trans  &trans      &trans    &trans   &kp TAB  &kp BSPC     &trans  &trans  &trans
     &trans  &trans  &trans  &trans  &trans      &trans  &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans  &trans
     &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans    &trans     &trans  &trans  &trans
     &trans  &trans  &trans          &trans  &caps_word    &trans    &trans               &trans  &trans  &trans
                                                                     &trans    &trans     &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
